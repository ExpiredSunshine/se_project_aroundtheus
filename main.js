!function(){"use strict";class e{constructor(e,t,s,i,r){let{name:n,link:a,_id:o,isLiked:l}=e;this._name=n,this._link=a,this._id=o,this.isLiked=l,this._cardTemplate=t,this._handleImageClick=s,this._handleTrashClick=i,this._api=r,this.element=this._getTemplate(),this.likeButton=this.element.querySelector(".card__like-button"),this._deleteButton=this.element.querySelector(".card__delete-button"),this._cardImage=this.element.querySelector(".card__image"),this._cardTitle=this.element.querySelector(".card__title"),this._setEventListeners()}_getTemplate(){return this._cardTemplate.content.querySelector(".card").cloneNode(!0)}_setEventListeners(){this.likeButton.addEventListener("click",(()=>{this._handleLikeClick(this)})),this._deleteButton.addEventListener("click",(()=>{this._handleTrashClick(this)})),this._cardImage.addEventListener("click",(()=>{this._handleImageClick({name:this._name,link:this._link})}))}_handleLikeClick(){this.isLiked?this._api.unlikeCard(this._id).then((()=>{this.isLiked=!1,this._updateLikeButton()})).catch((e=>console.error("Error unliking card:",e))):this._api.likeCard(this._id).then((()=>{this.isLiked=!0,this._updateLikeButton()})).catch((e=>console.error("Error liking card:",e)))}_updateLikeButton(){this.likeButton.classList.toggle("card__like-button_active",this.isLiked)}setLikedState(e){this.isLiked=e,this._updateLikeButton()}getView(){return this._cardTitle.textContent=this._name,this._cardImage.src=this._link,this._cardImage.alt=this._name,this.isLiked&&this.likeButton.classList.add("card__like-button_active"),this.element}}class t{constructor(e,t){this._settings=e,this._formElement=t,this._inputList=Array.from(this._formElement.querySelectorAll(this._settings.inputSelector)),this._buttonElement=this._formElement.querySelector(this._settings.submitButton)}_showInputError(e,t){const s=this._formElement.querySelector(`#${e.id}-error`);e.classList.add(this._settings.inputErrorClass),s.textContent=t,s.classList.add(this._settings.errorClass)}_hideInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.remove(this._settings.inputErrorClass),t.textContent="",t.classList.remove(this._settings.errorClass)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}toggleButtonState(){this._hasInvalidInput()?(this._buttonElement.classList.add(this._settings.inactiveButtonClass),this._buttonElement.disabled=!0):(this._buttonElement.classList.remove(this._settings.inactiveButtonClass),this._buttonElement.disabled=!1)}_hasInvalidInput(){return this._inputList.some((e=>!e.validity.valid))}_setEventListeners(){this.toggleButtonState(),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this.toggleButtonState()}))}))}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}resetValidation(){this._inputList.forEach((e=>{this._hideInputError(e)})),this.toggleButtonState()}}class s{constructor(e){this._popup=document.querySelector(e),this._handleEscClose=this._handleEscClose.bind(this)}open(){this._popup.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}_handleEscClose(e){"Escape"===e.key&&this.close()}close(){this._popup.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}setEventListeners(){this._popup.addEventListener("mousedown",(e=>{(e.target.classList.contains("modal")||e.target.classList.contains("modal__close"))&&this.close()}))}}class i extends s{constructor(e,t){let{handleFormSubmit:s}=t;super(e),this._handleFormSubmit=s,this._form=this._popup.querySelector(".modal__form"),this._inputList=this._form.querySelectorAll(".modal__input"),this._submitButton=this._form.querySelector(".modal__button")}_getInputValues(){return this._formValues={},this._inputList.forEach((e=>{this._formValues[e.name]=e.value})),this._formValues}_setInputValues(e){this._inputList.forEach((t=>{t.value=e[t.name]}))}toggleUploadIndicator(e){e?(this._submitButton.textContent="Saving...",this._submitButton.disabled=!0):(this._submitButton.textContent="Save",this._submitButton.disabled=!1)}getForm(){return this._form}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())}))}}const r=document.querySelector("#profile__edit-button"),n=document.querySelector("#profile-name-input"),a=document.querySelector("#image-URL-input"),o=document.querySelector("#profile-description-input"),l=document.querySelector(".profile__image-container"),d=document.querySelector(".profile__add-button"),h=document.querySelector("#card-template"),c=new class extends s{constructor(e){super(e),this._popupImage=this._popup.querySelector(".modal__image"),this._popupImageTitle=this._popup.querySelector(".modal__image-title")}open(e){let{name:t,link:s}=e;this._popupImage.src=s,this._popupImage.alt=t,this._popupImageTitle.textContent=t,super.open()}}("#image-modal");c.setEventListeners();const u=new class{constructor(e){let{baseUrl:t,headers:s}=e;this._baseUrl=t,this._headers=s}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}getCardList(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then(this._checkResponse)}addCard(e){let{name:t,link:s}=e;return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:s})}).then(this._checkResponse)}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then(this._checkResponse)}getProfileData(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then(this._checkResponse)}editProfileData(e){let{name:t,about:s}=e;return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:s})}).then(this._checkResponse)}editUserAvatar(e){let{avatar:t}=e;return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:t})}).then(this._checkResponse)}likeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers}).then(this._checkResponse)}unlikeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers}).then(this._checkResponse)}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"b656ee04-ff76-4b23-b20a-1e4991fc7f99","Content-Type":"application/json"}}),_=new class{constructor(e){let{nameSelector:t,aboutSelector:s,avatarSelector:i}=e;this._profileName=document.querySelector(t),this._profileAbout=document.querySelector(s),this._profileAvatar=document.querySelector(i)}getUserInfo(){return{name:this._profileName.textContent,about:this._profileAbout.textContent,avatar:this._profileAvatar.src}}setUserInfo(e){let{name:t,about:s,avatar:i}=e;void 0!==t&&(this._profileName.textContent=t),void 0!==s&&(this._profileAbout.textContent=s),void 0!==i&&(this._profileAvatar.src=i)}}({nameSelector:".profile__name",aboutSelector:".profile__description",avatarSelector:".profile__image"});function m(t){const s=new e(t,h,(e=>c.open(e)),E,u);return s.setLikedState(t.isLiked),s}u.getProfileData().then((e=>{_.setUserInfo({name:e.name,about:e.about,avatar:e.avatar})})).catch((e=>{console.error("Failed to fetch profile data:",e)}));const p=new i("#profile-edit-modal",{handleFormSubmit:e=>{p.toggleUploadIndicator(!0),u.editProfileData(e).then((e=>{_.setUserInfo(e),p.getForm().reset(),p.close()})).catch((e=>{console.log("Error updating Profile:",e)})).finally((()=>{p.toggleUploadIndicator(!1)}))}});p.setEventListeners();const f=new i("#avatar-edit-modal",{handleFormSubmit:e=>{const t=e["Image URL"];f.toggleUploadIndicator(!0),u.editUserAvatar({avatar:t}).then((e=>{_.setUserInfo({avatar:e.avatar}),f.getForm().reset(),f.close()})).catch((e=>{console.log("Error updating Avatar:",e)})).finally((()=>{f.toggleUploadIndicator(!1)}))}});f.setEventListeners();const g=new class{constructor(e,t){let{items:s=[],renderer:i}=e;this._items=s,this._renderer=i,this._container=document.querySelector(t)}renderItems(e){e.forEach((e=>this._renderer(e)))}appendItem(e){this._container.append(e)}prependItem(e){this._container.prepend(e)}}({items:[],renderer:e=>{const t=m(e);g.appendItem(t.getView())}},".cards__list");u.getCardList().then((e=>{g.renderItems(e)})).catch((e=>{console.error("Failed to fetch or render cards:",e)}));const v=new i("#add-card-modal",{handleFormSubmit:e=>{const t={name:e.title,link:e["Image URL"]};v.toggleUploadIndicator(!0),u.addCard(t).then((e=>{const t=m(e).getView();g.prependItem(t),L["add-card-form"].resetValidation(),v.getForm().reset(),v.close()})).catch((e=>console.error("Error adding card:",e))).finally((()=>v.toggleUploadIndicator(!1)))}});v.setEventListeners();const b=new class extends s{constructor(e,t){super(e),this._form=this._popup.querySelector(".modal__form"),this._handleFormSubmit=t}setSubmitHandler(e){this._handleFormSubmit=e}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit()}))}}("#delete-card-modal",(()=>{}));function E(e){b.open(),b.setSubmitHandler((()=>{u.deleteCard(e._id).then((()=>{e.element.remove(),e.element=null,b.close()})).catch((e=>console.error("Failed to delete card:",e)))}))}b.setEventListeners();const L={};var k;k={formSelector:".form-selector",inputSelector:".modal__input",submitButton:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},Array.from(document.querySelectorAll(k.formSelector)).forEach((e=>{const s=new t(k,e),i=e.getAttribute("name");L[i]=s,s.enableValidation()})),r.addEventListener("click",(()=>{const{name:e,about:t}=_.getUserInfo();n.value=e,o.value=t,L["profile-form"].resetValidation(),p.open()})),l.addEventListener("click",(()=>{const{avatar:e}=_.getUserInfo();a.value=e,L["avatar-form"].resetValidation(),f.open()})),d.addEventListener("click",(()=>{L["add-card-form"].resetValidation(),v.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,