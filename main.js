!function(){"use strict";class t{constructor(t,e,s,r,o){let{name:i,link:a,_id:n,isLiked:l}=t;this._name=i,this._link=a,this._id=n,this.isLiked=l,this._cardTemplate=e,this._handleImageClick=s,this._handleTrashClick=r,this._updateLike=o,this._element=this._getTemplate(),this._likeButton=this._element.querySelector(".card__like-button"),this._deleteButton=this._element.querySelector(".card__delete-button"),this._cardImage=this._element.querySelector(".card__image"),this._cardTitle=this._element.querySelector(".card__title"),this._deleteCardModal=document.querySelector("#delete-card-modal"),this._setEventListeners()}_getTemplate(){return this._cardTemplate.content.querySelector(".card").cloneNode(!0)}_setEventListeners(){this._likeButton.addEventListener("click",(()=>{this._updateLike(this)})),this._deleteButton.addEventListener("click",(()=>{this._handleTrashClick(this)})),this._cardImage.addEventListener("click",(()=>{this._handleImageClick({name:this._name,link:this._link})}))}_handleCardLike(){this._likeButton.classList.toggle("card__like-button_active")}_handleTrashClick(){this._deleteCardModal.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}toggleIsLiked(t){this._handleCardLike()}getView(){return this._cardTitle.textContent=this._name,this._cardImage.src=this._link,this._cardImage.alt=this._name,this._element}}class e{constructor(t,e){this._settings=t,this._formElement=e,this._inputList=Array.from(this._formElement.querySelectorAll(this._settings.inputSelector)),this._buttonElement=this._formElement.querySelector(this._settings.submitButton)}_showInputError(t,e){const s=this._formElement.querySelector(`#${t.id}-error`);t.classList.add(this._settings.inputErrorClass),s.textContent=e,s.classList.add(this._settings.errorClass)}_hideInputError(t){const e=this._formElement.querySelector(`#${t.id}-error`);t.classList.remove(this._settings.inputErrorClass),e.textContent="",e.classList.remove(this._settings.errorClass)}_checkInputValidity(t){t.validity.valid?this._hideInputError(t):this._showInputError(t,t.validationMessage)}toggleButtonState(){this._hasInvalidInput()?(this._buttonElement.classList.add(this._settings.inactiveButtonClass),this._buttonElement.disabled=!0):(this._buttonElement.classList.remove(this._settings.inactiveButtonClass),this._buttonElement.disabled=!1)}_hasInvalidInput(){return this._inputList.some((t=>!t.validity.valid))}_setEventListeners(){this.toggleButtonState(),this._inputList.forEach((t=>{t.addEventListener("input",(()=>{this._checkInputValidity(t),this.toggleButtonState()}))}))}enableValidation(){this._formElement.addEventListener("submit",(t=>{t.preventDefault()})),this._setEventListeners()}resetValidation(){this._inputList.forEach((t=>{this._hideInputError(t)})),this.toggleButtonState()}}class s{constructor(t){this._popup=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}open(){this._popup.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}_handleEscClose(t){"Escape"===t.key&&this.close()}close(){this._popup.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}toggleUploadIndicator(t){t?(this._submitButton.textContent="Saving...",this._submitButton.disabled=!0):(this._submitButton.textContent="Save",this._submitButton.disabled=!1)}setEventListeners(){this._popup.addEventListener("mousedown",(t=>{(t.target.classList.contains("modal")||t.target.classList.contains("modal__close"))&&this.close()}))}}class r extends s{constructor(t,e){let{handleFormSubmit:s}=e;super(t),this._handleFormSubmit=s,this._form=this._popup.querySelector(".modal__form"),this._inputList=this._form.querySelectorAll(".modal__input"),this._submitButton=this._form.querySelector(".modal__button")}_getInputValues(){return this._formValues={},this._inputList.forEach((t=>{this._formValues[t.name]=t.value})),this._formValues}_setInputValues(t){this._inputList.forEach((e=>{e.value=t[e.name]}))}getForm(){return this._form}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(t=>{t.preventDefault(),this._handleFormSubmit(this._getInputValues()),this._form.reset(),this.close()}))}}const o=document.querySelector("#profile__edit-button"),i=document.querySelector("#profile-name-input"),a=document.querySelector("#image-URL-input"),n=document.querySelector("#profile-description-input"),l=document.querySelector(".profile__image-container"),c=document.querySelector(".profile__add-button"),d=document.querySelector("#card-template"),h=new class extends s{constructor(t){super(t),this._popupImage=this._popup.querySelector(".modal__image"),this._popupImageTitle=this._popup.querySelector(".modal__image-title")}open(t){let{name:e,link:s}=t;this._popupImage.src=s,this._popupImage.alt=e,this._popupImageTitle.textContent=e,super.open()}}("#image-modal");h.setEventListeners();const u=new class{constructor(t){let{baseUrl:e,authToken:s}=t;this._baseUrl=e,this._authToken=s}getCardList(){return fetch(`${this._baseUrl}/cards`,{headers:{authorization:this._authToken}}).then((t=>t.ok?t.json():Promise.reject(`Error: ${t.status}`))).catch((t=>{console.log(t)}))}addCard(t){let{name:e,link:s}=t;return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:{authorization:this._authToken,"Content-Type":"application/json"},body:JSON.stringify({name:e,link:s})}).then((t=>t.ok?t.json():Promise.reject(`Error: ${t.status}`)))}deleteCard(t){return fetch(`${this._baseUrl}/cards/${t}`,{method:"DELETE",headers:{authorization:this._authToken,"Content-Type":"application/json"}}).then((t=>t.ok?t.json():Promise.reject(`Error: ${t.status}`)))}getProfileData(){return fetch(`${this._baseUrl}/users/me`,{headers:{authorization:this._authToken}}).then((t=>t.ok?t.json():Promise.reject(`Error: ${t.status}`))).catch((t=>{console.log(t)}))}editProfileData(t){let{name:e,about:s}=t;return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:{authorization:this._authToken,"Content-Type":"application/json"},body:JSON.stringify({name:e,about:s})}).then((t=>t.ok?t.json():Promise.reject(`Error: ${t.status}`)))}getUserAvatar(){return fetch(`${this._baseUrl}/users/me`,{headers:{authorization:this._authToken}}).then((t=>t.ok?t.json():Promise.reject(`Error: ${t.status}`))).catch((t=>{console.log(t)}))}editUserAvatar(t){let{avatar:e}=t;return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:{authorization:this._authToken,"Content-Type":"application/json"},body:JSON.stringify({avatar:e})}).then((t=>t.ok?t.json():Promise.reject(`Error: ${t.status}`)))}likeCard(t){return fetch(`${this._baseUrl}/cards/${t}/likes`,{method:"PUT",headers:{authorization:this._authToken,"Content-Type":"application/json"}}).then((t=>t.ok?t.json():Promise.reject(`Error: ${t.status}`)))}unlikeCard(t){return fetch(`${this._baseUrl}/cards/${t}/likes`,{method:"DELETE",headers:{authorization:this._authToken,"Content-Type":"application/json"}}).then((t=>t.ok?t.json():Promise.reject(`Error: ${t.status}`)))}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",authToken:"b656ee04-ff76-4b23-b20a-1e4991fc7f99"}),_=new class{constructor(t){let{nameSelector:e,aboutSelector:s}=t;this._profileName=document.querySelector(e),this._profileAbout=document.querySelector(s)}getUserInfo(){return{name:this._profileName.textContent,about:this._profileAbout.textContent}}setUserInfo(t){let{name:e,about:s}=t;this._profileName.textContent=e,this._profileAbout.textContent=s}}({nameSelector:".profile__name",aboutSelector:".profile__description"});u.getProfileData().then((t=>{_.setUserInfo({name:t.name,about:t.about})})).catch((t=>{console.error("Failed to fetch profile data:",t)}));const m=new r("#profile-edit-modal",{handleFormSubmit:t=>{m.toggleUploadIndicator(!0),u.editProfileData(t).then((t=>{_.setUserInfo({name:t.name,about:t.about}),m.close()})).catch((t=>{console.log("Error updating Profile:",t)})).finally((()=>{m.toggleUploadIndicator(!1)}))}});m.setEventListeners();const p=new class{constructor(t){let{avatarSelector:e}=t;this._profileAvatar=document.querySelector(e)}getUserAvatar(){return{avatar:this._profileAvatar.src}}setUserAvatar(t){let{avatar:e}=t;this._profileAvatar.src=e}}({avatarSelector:".profile__image"});u.getUserAvatar().then((t=>{p.setUserAvatar({avatar:t.avatar})})).catch((t=>{console.error("Failed to fetch profile Avatar:",t)}));const g=new r("#avatar-edit-modal",{handleFormSubmit:t=>{const e=t["Image URL"];g.toggleUploadIndicator(!0),u.editUserAvatar({avatar:e}).then((t=>{p.setUserAvatar({avatar:t.avatar}),g.close()})).catch((t=>{console.log("Error updating Avatar:",t)})).finally((()=>{g.toggleUploadIndicator(!1)}))}});g.setEventListeners();const f=new class{constructor(t,e){let{items:s=[],renderer:r}=t;this._items=s,this._renderer=r,this._container=document.querySelector(e)}renderItems(t){t.forEach((t=>this._renderer(t)))}appendItem(t){this._container.append(t)}prependItem(t){this._container.prepend(t)}}({items:[],renderer:e=>{const s=new t(e,d,(t=>h.open(t)),k,E).getView();e.isLiked&&s.querySelector(".card__like-button").classList.add("card__like-button_active"),f.appendItem(s)}},".cards__list");u.getCardList().then((t=>{f.renderItems(t)})).catch((t=>{console.error("Failed to fetch or render cards:",t)}));const v=new r("#add-card-modal",{handleFormSubmit:e=>{const s={name:e.title,link:e["Image URL"]};v.toggleUploadIndicator(!0),u.addCard(s).then((e=>{const s=new t(e,d,(t=>h.open(t)),k,E).getView();f.prependItem(s),v.close()})).catch((t=>console.error("Error adding card:",t))).finally((()=>v.toggleUploadIndicator(!1)))}});function E(t){t._likeButton.classList.contains("card__like-button_active")?u.unlikeCard(t._id).then((()=>{t.toggleIsLiked(!1)})).catch((t=>{console.error("Error unliking card:",t)})):u.likeCard(t._id).then((()=>{t.toggleIsLiked(!0)})).catch((t=>{console.error("Error liking card:",t)}))}v.setEventListeners();const b=new class extends s{constructor(t,e){super(t),this._form=this._popup.querySelector(".modal__form"),this._handleFormSubmit=e}setSubmitHandler(t){this._handleFormSubmit=t}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(t=>{t.preventDefault(),this._handleFormSubmit()}))}}("#delete-card-modal",(()=>{}));function k(t){b.open(),b.setSubmitHandler((()=>{u.deleteCard(t._id).then((()=>{t._element.remove(),t._element=null,b.close()})).catch((t=>console.error("Failed to delete card:",t)))}))}b.setEventListeners();const L={};var S;S={formSelector:".form-selector",inputSelector:".modal__input",submitButton:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},Array.from(document.querySelectorAll(S.formSelector)).forEach((t=>{const s=new e(S,t),r=t.getAttribute("name");L[r]=s,s.enableValidation()})),o.addEventListener("click",(()=>{const{name:t,about:e}=_.getUserInfo();i.value=t,n.value=e,L["profile-form"].resetValidation(),m.open()})),l.addEventListener("click",(()=>{const{avatar:t}=p.getUserAvatar();a.value=t,L["avatar-form"].resetValidation(),g.open()})),c.addEventListener("click",(()=>{v.open(!0)}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QWEsUUFDMUNMLEVBQWVJLEdBQVlELEVBQzNCQSxFQUFVekgsa0JBQWtCLElBUWhDZ0MsRUFBa0IxRSxpQkFBaUIsU0FBUyxLQUMxQyxNQUFNLEtBQUV2QixFQUFJLE1BQUV5SSxHQUFVTyxFQUFTSyxjQUNqQ25ELEVBQWlCTixNQUFRNUYsRUFDekJvRyxFQUFrQlIsTUFBUTZDLEVBQzFCOEMsRUFBZSxnQkFBZ0JuSCxrQkFDL0JvRixFQUFpQi9FLE1BQU0sSUFHekI0QixFQUFpQjlFLGlCQUFpQixTQUFTLEtBQ3pDLE1BQU0sT0FBRXNILEdBQVdjLEVBQVdqQixnQkFDOUJ2QyxFQUFlUCxNQUFRaUQsRUFDdkIwQyxFQUFlLGVBQWVuSCxrQkFDOUIyRixFQUFnQnRGLE1BQU0sSUFHeEI2QixFQUFjL0UsaUJBQWlCLFNBQVMsS0FDdEMySixFQUFhekcsTUFBSyxFQUFLLEciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hcm91bmRfdGhlX3VzLy4vc3JjL2NvbXBvbmVudHMvQ2FyZC5qcyIsIndlYnBhY2s6Ly9hcm91bmRfdGhlX3VzLy4vc3JjL2NvbXBvbmVudHMvRm9ybVZhbGlkYXRvci5qcyIsIndlYnBhY2s6Ly9hcm91bmRfdGhlX3VzLy4vc3JjL2NvbXBvbmVudHMvUG9wdXAuanMiLCJ3ZWJwYWNrOi8vYXJvdW5kX3RoZV91cy8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanMiLCJ3ZWJwYWNrOi8vYXJvdW5kX3RoZV91cy8uL3NyYy9wYWdlcy9pbmRleC5qcyIsIndlYnBhY2s6Ly9hcm91bmRfdGhlX3VzLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanMiLCJ3ZWJwYWNrOi8vYXJvdW5kX3RoZV91cy8uL3NyYy9jb21wb25lbnRzL2FwaS5qcyIsIndlYnBhY2s6Ly9hcm91bmRfdGhlX3VzLy4vc3JjL2NvbXBvbmVudHMvVXNlckluZm8uanMiLCJ3ZWJwYWNrOi8vYXJvdW5kX3RoZV91cy8uL3NyYy9jb21wb25lbnRzL1VzZXJBdmF0YXIuanMiLCJ3ZWJwYWNrOi8vYXJvdW5kX3RoZV91cy8uL3NyYy9jb21wb25lbnRzL1NlY3Rpb24uanMiLCJ3ZWJwYWNrOi8vYXJvdW5kX3RoZV91cy8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aENvbmZpcm0uanMiLCJ3ZWJwYWNrOi8vYXJvdW5kX3RoZV91cy8uL3NyYy91dGlscy9jb25zdGFudHMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2FyZCB7XG4gIGNvbnN0cnVjdG9yKFxuICAgIHsgbmFtZSwgbGluaywgX2lkLCBpc0xpa2VkIH0sXG4gICAgY2FyZFRlbXBsYXRlLFxuICAgIGhhbmRsZUltYWdlQ2xpY2ssXG4gICAgaGFuZGxlVHJhc2hDbGljayxcbiAgICB1cGRhdGVMaWtlXG4gICkge1xuICAgIHRoaXMuX25hbWUgPSBuYW1lO1xuICAgIHRoaXMuX2xpbmsgPSBsaW5rO1xuICAgIHRoaXMuX2lkID0gX2lkO1xuICAgIHRoaXMuaXNMaWtlZCA9IGlzTGlrZWQ7XG4gICAgdGhpcy5fY2FyZFRlbXBsYXRlID0gY2FyZFRlbXBsYXRlO1xuICAgIHRoaXMuX2hhbmRsZUltYWdlQ2xpY2sgPSBoYW5kbGVJbWFnZUNsaWNrO1xuICAgIHRoaXMuX2hhbmRsZVRyYXNoQ2xpY2sgPSBoYW5kbGVUcmFzaENsaWNrO1xuICAgIHRoaXMuX3VwZGF0ZUxpa2UgPSB1cGRhdGVMaWtlO1xuICAgIHRoaXMuX2VsZW1lbnQgPSB0aGlzLl9nZXRUZW1wbGF0ZSgpO1xuICAgIHRoaXMuX2xpa2VCdXR0b24gPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9fbGlrZS1idXR0b25cIik7XG4gICAgdGhpcy5fZGVsZXRlQnV0dG9uID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2RlbGV0ZS1idXR0b25cIik7XG4gICAgdGhpcy5fY2FyZEltYWdlID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2ltYWdlXCIpO1xuICAgIHRoaXMuX2NhcmRUaXRsZSA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX190aXRsZVwiKTtcbiAgICB0aGlzLl9kZWxldGVDYXJkTW9kYWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2RlbGV0ZS1jYXJkLW1vZGFsXCIpO1xuICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzKCk7XG4gIH1cblxuICBfZ2V0VGVtcGxhdGUoKSB7XG4gICAgY29uc3QgY2FyZEVsZW1lbnQgPSB0aGlzLl9jYXJkVGVtcGxhdGUuY29udGVudFxuICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZFwiKVxuICAgICAgLmNsb25lTm9kZSh0cnVlKTtcbiAgICByZXR1cm4gY2FyZEVsZW1lbnQ7XG4gIH1cblxuICBfc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgdGhpcy5fbGlrZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgdGhpcy5fdXBkYXRlTGlrZSh0aGlzKTtcbiAgICB9KTtcblxuICAgIHRoaXMuX2RlbGV0ZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgdGhpcy5faGFuZGxlVHJhc2hDbGljayh0aGlzKTtcbiAgICB9KTtcblxuICAgIHRoaXMuX2NhcmRJbWFnZS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgdGhpcy5faGFuZGxlSW1hZ2VDbGljayh7IG5hbWU6IHRoaXMuX25hbWUsIGxpbms6IHRoaXMuX2xpbmsgfSk7XG4gICAgfSk7XG4gIH1cblxuICBfaGFuZGxlQ2FyZExpa2UoKSB7XG4gICAgdGhpcy5fbGlrZUJ1dHRvbi5jbGFzc0xpc3QudG9nZ2xlKFwiY2FyZF9fbGlrZS1idXR0b25fYWN0aXZlXCIpO1xuICB9XG5cbiAgX2hhbmRsZVRyYXNoQ2xpY2soKSB7XG4gICAgdGhpcy5fZGVsZXRlQ2FyZE1vZGFsLmNsYXNzTGlzdC5hZGQoXCJtb2RhbF9vcGVuZWRcIik7XG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgdGhpcy5faGFuZGxlRXNjQ2xvc2UpO1xuICB9XG5cbiAgdG9nZ2xlSXNMaWtlZChpc0xpa2VkKSB7XG4gICAgaWYgKGlzTGlrZWQpIHtcbiAgICAgIHRoaXMuX2hhbmRsZUNhcmRMaWtlKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuX2hhbmRsZUNhcmRMaWtlKCk7XG4gICAgfVxuICB9XG5cbiAgZ2V0VmlldygpIHtcbiAgICB0aGlzLl9jYXJkVGl0bGUudGV4dENvbnRlbnQgPSB0aGlzLl9uYW1lO1xuICAgIHRoaXMuX2NhcmRJbWFnZS5zcmMgPSB0aGlzLl9saW5rO1xuICAgIHRoaXMuX2NhcmRJbWFnZS5hbHQgPSB0aGlzLl9uYW1lO1xuICAgIHJldHVybiB0aGlzLl9lbGVtZW50O1xuICB9XG59XG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBGb3JtVmFsaWRhdG9yIHtcbiAgY29uc3RydWN0b3Ioc2V0dGluZ3MsIGZvcm1FbGVtZW50KSB7XG4gICAgdGhpcy5fc2V0dGluZ3MgPSBzZXR0aW5ncztcbiAgICB0aGlzLl9mb3JtRWxlbWVudCA9IGZvcm1FbGVtZW50O1xuICAgIHRoaXMuX2lucHV0TGlzdCA9IEFycmF5LmZyb20oXG4gICAgICB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKHRoaXMuX3NldHRpbmdzLmlucHV0U2VsZWN0b3IpXG4gICAgKTtcbiAgICB0aGlzLl9idXR0b25FbGVtZW50ID0gdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcihcbiAgICAgIHRoaXMuX3NldHRpbmdzLnN1Ym1pdEJ1dHRvblxuICAgICk7XG4gIH1cblxuICBfc2hvd0lucHV0RXJyb3IoaW5wdXRFbGVtZW50LCBlcnJvck1lc3NhZ2UpIHtcbiAgICBjb25zdCBlcnJvckVsZW1lbnQgPSB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKFxuICAgICAgYCMke2lucHV0RWxlbWVudC5pZH0tZXJyb3JgXG4gICAgKTtcbiAgICBpbnB1dEVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9zZXR0aW5ncy5pbnB1dEVycm9yQ2xhc3MpO1xuICAgIGVycm9yRWxlbWVudC50ZXh0Q29udGVudCA9IGVycm9yTWVzc2FnZTtcbiAgICBlcnJvckVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9zZXR0aW5ncy5lcnJvckNsYXNzKTtcbiAgfVxuXG4gIF9oaWRlSW5wdXRFcnJvcihpbnB1dEVsZW1lbnQpIHtcbiAgICBjb25zdCBlcnJvckVsZW1lbnQgPSB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKFxuICAgICAgYCMke2lucHV0RWxlbWVudC5pZH0tZXJyb3JgXG4gICAgKTtcbiAgICBpbnB1dEVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9zZXR0aW5ncy5pbnB1dEVycm9yQ2xhc3MpO1xuICAgIGVycm9yRWxlbWVudC50ZXh0Q29udGVudCA9IFwiXCI7XG4gICAgZXJyb3JFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5fc2V0dGluZ3MuZXJyb3JDbGFzcyk7XG4gIH1cblxuICBfY2hlY2tJbnB1dFZhbGlkaXR5KGlucHV0RWxlbWVudCkge1xuICAgIGlmICghaW5wdXRFbGVtZW50LnZhbGlkaXR5LnZhbGlkKSB7XG4gICAgICB0aGlzLl9zaG93SW5wdXRFcnJvcihpbnB1dEVsZW1lbnQsIGlucHV0RWxlbWVudC52YWxpZGF0aW9uTWVzc2FnZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuX2hpZGVJbnB1dEVycm9yKGlucHV0RWxlbWVudCk7XG4gICAgfVxuICB9XG5cbiAgdG9nZ2xlQnV0dG9uU3RhdGUoKSB7XG4gICAgaWYgKHRoaXMuX2hhc0ludmFsaWRJbnB1dCgpKSB7XG4gICAgICB0aGlzLl9idXR0b25FbGVtZW50LmNsYXNzTGlzdC5hZGQodGhpcy5fc2V0dGluZ3MuaW5hY3RpdmVCdXR0b25DbGFzcyk7XG4gICAgICB0aGlzLl9idXR0b25FbGVtZW50LmRpc2FibGVkID0gdHJ1ZTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5fYnV0dG9uRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX3NldHRpbmdzLmluYWN0aXZlQnV0dG9uQ2xhc3MpO1xuICAgICAgdGhpcy5fYnV0dG9uRWxlbWVudC5kaXNhYmxlZCA9IGZhbHNlO1xuICAgIH1cbiAgfVxuXG4gIF9oYXNJbnZhbGlkSW5wdXQoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2lucHV0TGlzdC5zb21lKChpbnB1dEVsZW1lbnQpID0+ICFpbnB1dEVsZW1lbnQudmFsaWRpdHkudmFsaWQpO1xuICB9XG5cbiAgX3NldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgIHRoaXMudG9nZ2xlQnV0dG9uU3RhdGUoKTtcblxuICAgIHRoaXMuX2lucHV0TGlzdC5mb3JFYWNoKChpbnB1dEVsZW1lbnQpID0+IHtcbiAgICAgIGlucHV0RWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwiaW5wdXRcIiwgKCkgPT4ge1xuICAgICAgICB0aGlzLl9jaGVja0lucHV0VmFsaWRpdHkoaW5wdXRFbGVtZW50KTtcbiAgICAgICAgdGhpcy50b2dnbGVCdXR0b25TdGF0ZSgpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICBlbmFibGVWYWxpZGF0aW9uKCkge1xuICAgIHRoaXMuX2Zvcm1FbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKGV2dCkgPT4ge1xuICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XG4gICAgfSk7XG4gICAgdGhpcy5fc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbiAgfVxuXG4gIHJlc2V0VmFsaWRhdGlvbigpIHtcbiAgICB0aGlzLl9pbnB1dExpc3QuZm9yRWFjaCgoaW5wdXRFbGVtZW50KSA9PiB7XG4gICAgICB0aGlzLl9oaWRlSW5wdXRFcnJvcihpbnB1dEVsZW1lbnQpO1xuICAgIH0pO1xuICAgIHRoaXMudG9nZ2xlQnV0dG9uU3RhdGUoKTtcbiAgfVxufVxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXAge1xuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yKSB7XG4gICAgdGhpcy5fcG9wdXAgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHBvcHVwU2VsZWN0b3IpO1xuICAgIHRoaXMuX2hhbmRsZUVzY0Nsb3NlID0gdGhpcy5faGFuZGxlRXNjQ2xvc2UuYmluZCh0aGlzKTtcbiAgfVxuXG4gIG9wZW4oKSB7XG4gICAgdGhpcy5fcG9wdXAuY2xhc3NMaXN0LmFkZChcIm1vZGFsX29wZW5lZFwiKTtcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCB0aGlzLl9oYW5kbGVFc2NDbG9zZSk7XG4gIH1cblxuICBfaGFuZGxlRXNjQ2xvc2UoZXZlbnQpIHtcbiAgICBpZiAoZXZlbnQua2V5ID09PSBcIkVzY2FwZVwiKSB7XG4gICAgICB0aGlzLmNsb3NlKCk7XG4gICAgfVxuICB9XG5cbiAgY2xvc2UoKSB7XG4gICAgdGhpcy5fcG9wdXAuY2xhc3NMaXN0LnJlbW92ZShcIm1vZGFsX29wZW5lZFwiKTtcbiAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCB0aGlzLl9oYW5kbGVFc2NDbG9zZSk7XG4gIH1cblxuICB0b2dnbGVVcGxvYWRJbmRpY2F0b3IoaXNVcGxvYWRpbmcpIHtcbiAgICBpZiAoaXNVcGxvYWRpbmcpIHtcbiAgICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi50ZXh0Q29udGVudCA9IFwiU2F2aW5nLi4uXCI7XG4gICAgICB0aGlzLl9zdWJtaXRCdXR0b24uZGlzYWJsZWQgPSB0cnVlO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLl9zdWJtaXRCdXR0b24udGV4dENvbnRlbnQgPSBcIlNhdmVcIjtcbiAgICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi5kaXNhYmxlZCA9IGZhbHNlO1xuICAgIH1cbiAgfVxuXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgIHRoaXMuX3BvcHVwLmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZWRvd25cIiwgKGV2ZW50KSA9PiB7XG4gICAgICBpZiAoXG4gICAgICAgIGV2ZW50LnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoXCJtb2RhbFwiKSB8fFxuICAgICAgICBldmVudC50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKFwibW9kYWxfX2Nsb3NlXCIpXG4gICAgICApIHtcbiAgICAgICAgdGhpcy5jbG9zZSgpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG59XG4iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXAuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoRm9ybSBleHRlbmRzIFBvcHVwIHtcbiAgY29uc3RydWN0b3IocG9wdXBTZWxlY3RvciwgeyBoYW5kbGVGb3JtU3VibWl0IH0pIHtcbiAgICBzdXBlcihwb3B1cFNlbGVjdG9yKTtcbiAgICB0aGlzLl9oYW5kbGVGb3JtU3VibWl0ID0gaGFuZGxlRm9ybVN1Ym1pdDtcbiAgICB0aGlzLl9mb3JtID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fZm9ybVwiKTtcbiAgICB0aGlzLl9pbnB1dExpc3QgPSB0aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3JBbGwoXCIubW9kYWxfX2lucHV0XCIpO1xuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbiA9IHRoaXMuX2Zvcm0ucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fYnV0dG9uXCIpO1xuICB9XG5cbiAgX2dldElucHV0VmFsdWVzKCkge1xuICAgIHRoaXMuX2Zvcm1WYWx1ZXMgPSB7fTtcbiAgICB0aGlzLl9pbnB1dExpc3QuZm9yRWFjaCgoaW5wdXQpID0+IHtcbiAgICAgIHRoaXMuX2Zvcm1WYWx1ZXNbaW5wdXQubmFtZV0gPSBpbnB1dC52YWx1ZTtcbiAgICB9KTtcbiAgICByZXR1cm4gdGhpcy5fZm9ybVZhbHVlcztcbiAgfVxuXG4gIF9zZXRJbnB1dFZhbHVlcyhkYXRhKSB7XG4gICAgdGhpcy5faW5wdXRMaXN0LmZvckVhY2goKGlucHV0KSA9PiB7XG4gICAgICBpbnB1dC52YWx1ZSA9IGRhdGFbaW5wdXQubmFtZV07XG4gICAgfSk7XG4gIH1cblxuICBnZXRGb3JtKCkge1xuICAgIHJldHVybiB0aGlzLl9mb3JtO1xuICB9XG5cbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgc3VwZXIuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbiAgICB0aGlzLl9mb3JtLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKGV2ZW50KSA9PiB7XG4gICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgdGhpcy5faGFuZGxlRm9ybVN1Ym1pdCh0aGlzLl9nZXRJbnB1dFZhbHVlcygpKTtcbiAgICAgIHRoaXMuX2Zvcm0ucmVzZXQoKTtcbiAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICB9KTtcbiAgfVxufVxuIiwiLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gSW1wb3J0c1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuaW1wb3J0IHsgdmFsaWRhdGlvblNldHRpbmdzIH0gZnJvbSBcIi4uL3V0aWxzL2NvbnN0YW50cy5qc1wiO1xuaW1wb3J0IENhcmQgZnJvbSBcIi4uL2NvbXBvbmVudHMvQ2FyZC5qc1wiO1xuaW1wb3J0IEZvcm1WYWxpZGF0b3IgZnJvbSBcIi4uL2NvbXBvbmVudHMvRm9ybVZhbGlkYXRvci5qc1wiO1xuaW1wb3J0IFNlY3Rpb24gZnJvbSBcIi4uL2NvbXBvbmVudHMvU2VjdGlvbi5qc1wiO1xuaW1wb3J0IFBvcHVwV2l0aEltYWdlIGZyb20gXCIuLi9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlLmpzXCI7XG5pbXBvcnQgUG9wdXBXaXRoRm9ybSBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzXCI7XG5pbXBvcnQgVXNlckluZm8gZnJvbSBcIi4uL2NvbXBvbmVudHMvVXNlckluZm8uanNcIjtcbmltcG9ydCBBcGkgZnJvbSBcIi4uL2NvbXBvbmVudHMvYXBpLmpzXCI7XG5pbXBvcnQgXCIuLi9wYWdlcy9pbmRleC5jc3NcIjtcbmltcG9ydCBQb3B1cFdpdGhDb25maXJtIGZyb20gXCIuLi9jb21wb25lbnRzL1BvcHVwV2l0aENvbmZpcm0uanNcIjtcbmltcG9ydCBVc2VyQXZhdGFyIGZyb20gXCIuLi9jb21wb25lbnRzL1VzZXJBdmF0YXIuanNcIjtcblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gU2VsZWN0b3JzXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5jb25zdCBwcm9maWxlRWRpdEJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcHJvZmlsZV9fZWRpdC1idXR0b25cIik7XG5jb25zdCBwcm9maWxlTmFtZUlucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNwcm9maWxlLW5hbWUtaW5wdXRcIik7XG5jb25zdCBhdmF0YXJVUkxJbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjaW1hZ2UtVVJMLWlucHV0XCIpO1xuY29uc3QgcHJvZmlsZUFib3V0SW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3Byb2ZpbGUtZGVzY3JpcHRpb24taW5wdXRcIik7XG5jb25zdCBhdmF0YXJFZGl0QnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19pbWFnZS1jb250YWluZXJcIik7XG5jb25zdCBjYXJkQWRkQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19hZGQtYnV0dG9uXCIpO1xuY29uc3QgY2FyZFRlbXBsYXRlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNjYXJkLXRlbXBsYXRlXCIpO1xuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBJbWFnZSBQb3B1cCBJbnN0YW5jZVxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuY29uc3QgaW1hZ2VQb3B1cCA9IG5ldyBQb3B1cFdpdGhJbWFnZShcIiNpbWFnZS1tb2RhbFwiKTtcbmltYWdlUG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gQVBJIEluc3RhbmNlXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5jb25zdCBhcGkgPSBuZXcgQXBpKHtcbiAgYmFzZVVybDogXCJodHRwczovL2Fyb3VuZC1hcGkuZW4udHJpcGxldGVuLXNlcnZpY2VzLmNvbS92MVwiLFxuICBhdXRoVG9rZW46IFwiYjY1NmVlMDQtZmY3Ni00YjIzLWIyMGEtMWU0OTkxZmM3Zjk5XCIsXG59KTtcblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gVXNlckluZm8gSW5zdGFuY2Vcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbmNvbnN0IHVzZXJJbmZvID0gbmV3IFVzZXJJbmZvKHtcbiAgbmFtZVNlbGVjdG9yOiBcIi5wcm9maWxlX19uYW1lXCIsXG4gIGFib3V0U2VsZWN0b3I6IFwiLnByb2ZpbGVfX2Rlc2NyaXB0aW9uXCIsXG59KTtcblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gSW5pdGFsIFVzZXJJbmZvIFBvcHVsYXRpb25cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbmFwaVxuICAuZ2V0UHJvZmlsZURhdGEoKVxuICAudGhlbigoZGF0YSkgPT4ge1xuICAgIHVzZXJJbmZvLnNldFVzZXJJbmZvKHtcbiAgICAgIG5hbWU6IGRhdGEubmFtZSxcbiAgICAgIGFib3V0OiBkYXRhLmFib3V0LFxuICAgIH0pO1xuICB9KVxuICAuY2F0Y2goKGVycm9yKSA9PiB7XG4gICAgY29uc29sZS5lcnJvcihcIkZhaWxlZCB0byBmZXRjaCBwcm9maWxlIGRhdGE6XCIsIGVycm9yKTtcbiAgfSk7XG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIEVkaXRpbmcgVXNlckluZm8gUG9wdXBcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbmNvbnN0IHByb2ZpbGVFZGl0UG9wdXAgPSBuZXcgUG9wdXBXaXRoRm9ybShcIiNwcm9maWxlLWVkaXQtbW9kYWxcIiwge1xuICBoYW5kbGVGb3JtU3VibWl0OiAoZm9ybURhdGEpID0+IHtcbiAgICBwcm9maWxlRWRpdFBvcHVwLnRvZ2dsZVVwbG9hZEluZGljYXRvcih0cnVlKTtcblxuICAgIGFwaVxuICAgICAgLmVkaXRQcm9maWxlRGF0YShmb3JtRGF0YSlcbiAgICAgIC50aGVuKChkYXRhKSA9PiB7XG4gICAgICAgIHVzZXJJbmZvLnNldFVzZXJJbmZvKHtcbiAgICAgICAgICBuYW1lOiBkYXRhLm5hbWUsXG4gICAgICAgICAgYWJvdXQ6IGRhdGEuYWJvdXQsXG4gICAgICAgIH0pO1xuICAgICAgICBwcm9maWxlRWRpdFBvcHVwLmNsb3NlKCk7XG4gICAgICB9KVxuICAgICAgLmNhdGNoKChlcnJvcikgPT4ge1xuICAgICAgICBjb25zb2xlLmxvZyhcIkVycm9yIHVwZGF0aW5nIFByb2ZpbGU6XCIsIGVycm9yKTtcbiAgICAgIH0pXG4gICAgICAuZmluYWxseSgoKSA9PiB7XG4gICAgICAgIHByb2ZpbGVFZGl0UG9wdXAudG9nZ2xlVXBsb2FkSW5kaWNhdG9yKGZhbHNlKTtcbiAgICAgIH0pO1xuICB9LFxufSk7XG5cbnByb2ZpbGVFZGl0UG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gVXNlciBBdmF0YXIgSW5zdGFuY2Vcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbmNvbnN0IHVzZXJBdmF0YXIgPSBuZXcgVXNlckF2YXRhcih7XG4gIGF2YXRhclNlbGVjdG9yOiBcIi5wcm9maWxlX19pbWFnZVwiLFxufSk7XG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIEluaXRhbCBVc2VyIEF2YXRhciBQb3B1bGF0aW9uXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5hcGlcbiAgLmdldFVzZXJBdmF0YXIoKVxuICAudGhlbigoZGF0YSkgPT4ge1xuICAgIHVzZXJBdmF0YXIuc2V0VXNlckF2YXRhcih7XG4gICAgICBhdmF0YXI6IGRhdGEuYXZhdGFyLFxuICAgIH0pO1xuICB9KVxuICAuY2F0Y2goKGVycm9yKSA9PiB7XG4gICAgY29uc29sZS5lcnJvcihcIkZhaWxlZCB0byBmZXRjaCBwcm9maWxlIEF2YXRhcjpcIiwgZXJyb3IpO1xuICB9KTtcblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gRWRpdGluZyBVc2VyQXZhdGFyIFBvcHVwXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5jb25zdCBhdmF0YXJFZGl0UG9wdXAgPSBuZXcgUG9wdXBXaXRoRm9ybShcIiNhdmF0YXItZWRpdC1tb2RhbFwiLCB7XG4gIGhhbmRsZUZvcm1TdWJtaXQ6IChmb3JtRGF0YSkgPT4ge1xuICAgIGNvbnN0IGF2YXRhclVSTCA9IGZvcm1EYXRhW1wiSW1hZ2UgVVJMXCJdO1xuICAgIGF2YXRhckVkaXRQb3B1cC50b2dnbGVVcGxvYWRJbmRpY2F0b3IodHJ1ZSk7XG5cbiAgICBhcGlcbiAgICAgIC5lZGl0VXNlckF2YXRhcih7IGF2YXRhcjogYXZhdGFyVVJMIH0pXG4gICAgICAudGhlbigoZGF0YSkgPT4ge1xuICAgICAgICB1c2VyQXZhdGFyLnNldFVzZXJBdmF0YXIoe1xuICAgICAgICAgIGF2YXRhcjogZGF0YS5hdmF0YXIsXG4gICAgICAgIH0pO1xuICAgICAgICBhdmF0YXJFZGl0UG9wdXAuY2xvc2UoKTtcbiAgICAgIH0pXG4gICAgICAuY2F0Y2goKGVycm9yKSA9PiB7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiRXJyb3IgdXBkYXRpbmcgQXZhdGFyOlwiLCBlcnJvcik7XG4gICAgICB9KVxuICAgICAgLmZpbmFsbHkoKCkgPT4ge1xuICAgICAgICBhdmF0YXJFZGl0UG9wdXAudG9nZ2xlVXBsb2FkSW5kaWNhdG9yKGZhbHNlKTtcbiAgICAgIH0pO1xuICB9LFxufSk7XG5cbmF2YXRhckVkaXRQb3B1cC5zZXRFdmVudExpc3RlbmVycygpO1xuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBDYXJkIFNlY3Rpb24gSW5zdGFuY2Vcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbmNvbnN0IGNhcmRTZWN0aW9uID0gbmV3IFNlY3Rpb24oXG4gIHtcbiAgICBpdGVtczogW10sXG4gICAgcmVuZGVyZXI6IChjYXJkRGF0YSkgPT4ge1xuICAgICAgY29uc3QgY2FyZCA9IG5ldyBDYXJkKFxuICAgICAgICBjYXJkRGF0YSxcbiAgICAgICAgY2FyZFRlbXBsYXRlLFxuICAgICAgICAoY2FyZERhdGEpID0+IGltYWdlUG9wdXAub3BlbihjYXJkRGF0YSksXG4gICAgICAgIGhhbmRsZVRyYXNoQ2xpY2ssXG4gICAgICAgIHVwZGF0ZUxpa2VcbiAgICAgICkuZ2V0VmlldygpO1xuICAgICAgaWYgKGNhcmREYXRhLmlzTGlrZWQpIHtcbiAgICAgICAgY2FyZFxuICAgICAgICAgIC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2xpa2UtYnV0dG9uXCIpXG4gICAgICAgICAgLmNsYXNzTGlzdC5hZGQoXCJjYXJkX19saWtlLWJ1dHRvbl9hY3RpdmVcIik7XG4gICAgICB9XG4gICAgICBjYXJkU2VjdGlvbi5hcHBlbmRJdGVtKGNhcmQpO1xuICAgIH0sXG4gIH0sXG4gIFwiLmNhcmRzX19saXN0XCJcbik7XG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIEluaXRpYWwgQ2FyZCBDcmVhdGlvbiAmIFJlbmRlcmluZyBmcm9tIEFQSVxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuYXBpXG4gIC5nZXRDYXJkTGlzdCgpXG4gIC50aGVuKChjYXJkTGlzdCkgPT4ge1xuICAgIGNhcmRTZWN0aW9uLnJlbmRlckl0ZW1zKGNhcmRMaXN0KTtcbiAgfSlcbiAgLmNhdGNoKChlcnJvcikgPT4ge1xuICAgIGNvbnNvbGUuZXJyb3IoXCJGYWlsZWQgdG8gZmV0Y2ggb3IgcmVuZGVyIGNhcmRzOlwiLCBlcnJvcik7XG4gIH0pO1xuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBBZGRpdGlvbmFsIENhcmQgYWRkaW5nIHRvIEFQSSAmIERPTVxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuY29uc3QgYWRkQ2FyZFBvcHVwID0gbmV3IFBvcHVwV2l0aEZvcm0oXCIjYWRkLWNhcmQtbW9kYWxcIiwge1xuICBoYW5kbGVGb3JtU3VibWl0OiAoZm9ybURhdGEpID0+IHtcbiAgICBjb25zdCBjYXJkRGF0YSA9IHtcbiAgICAgIG5hbWU6IGZvcm1EYXRhW1widGl0bGVcIl0sXG4gICAgICBsaW5rOiBmb3JtRGF0YVtcIkltYWdlIFVSTFwiXSxcbiAgICB9O1xuXG4gICAgYWRkQ2FyZFBvcHVwLnRvZ2dsZVVwbG9hZEluZGljYXRvcih0cnVlKTtcblxuICAgIGFwaVxuICAgICAgLmFkZENhcmQoY2FyZERhdGEpXG4gICAgICAudGhlbigoYXBpQ2FyZERhdGEpID0+IHtcbiAgICAgICAgY29uc3QgY2FyZCA9IG5ldyBDYXJkKFxuICAgICAgICAgIGFwaUNhcmREYXRhLFxuICAgICAgICAgIGNhcmRUZW1wbGF0ZSxcbiAgICAgICAgICAoZGF0YSkgPT4gaW1hZ2VQb3B1cC5vcGVuKGRhdGEpLFxuICAgICAgICAgIGhhbmRsZVRyYXNoQ2xpY2ssXG4gICAgICAgICAgdXBkYXRlTGlrZVxuICAgICAgICApLmdldFZpZXcoKTtcblxuICAgICAgICBjYXJkU2VjdGlvbi5wcmVwZW5kSXRlbShjYXJkKTtcbiAgICAgICAgYWRkQ2FyZFBvcHVwLmNsb3NlKCk7XG4gICAgICB9KVxuICAgICAgLmNhdGNoKChlcnJvcikgPT4gY29uc29sZS5lcnJvcihcIkVycm9yIGFkZGluZyBjYXJkOlwiLCBlcnJvcikpXG4gICAgICAuZmluYWxseSgoKSA9PiBhZGRDYXJkUG9wdXAudG9nZ2xlVXBsb2FkSW5kaWNhdG9yKGZhbHNlKSk7XG4gIH0sXG59KTtcblxuYWRkQ2FyZFBvcHVwLnNldEV2ZW50TGlzdGVuZXJzKCk7XG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIENhcmQgTGlraW5nXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbmZ1bmN0aW9uIHVwZGF0ZUxpa2UoY2FyZCkge1xuICBjb25zdCBpc0N1cnJlbnRseUxpa2VkID0gY2FyZC5fbGlrZUJ1dHRvbi5jbGFzc0xpc3QuY29udGFpbnMoXG4gICAgXCJjYXJkX19saWtlLWJ1dHRvbl9hY3RpdmVcIlxuICApO1xuXG4gIGlmIChpc0N1cnJlbnRseUxpa2VkKSB7XG4gICAgYXBpXG4gICAgICAudW5saWtlQ2FyZChjYXJkLl9pZClcbiAgICAgIC50aGVuKCgpID0+IHtcbiAgICAgICAgY2FyZC50b2dnbGVJc0xpa2VkKGZhbHNlKTtcbiAgICAgIH0pXG4gICAgICAuY2F0Y2goKGVycm9yKSA9PiB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciB1bmxpa2luZyBjYXJkOlwiLCBlcnJvcik7XG4gICAgICB9KTtcbiAgfSBlbHNlIHtcbiAgICBhcGlcbiAgICAgIC5saWtlQ2FyZChjYXJkLl9pZClcbiAgICAgIC50aGVuKCgpID0+IHtcbiAgICAgICAgY2FyZC50b2dnbGVJc0xpa2VkKHRydWUpO1xuICAgICAgfSlcbiAgICAgIC5jYXRjaCgoZXJyb3IpID0+IHtcbiAgICAgICAgY29uc29sZS5lcnJvcihcIkVycm9yIGxpa2luZyBjYXJkOlwiLCBlcnJvcik7XG4gICAgICB9KTtcbiAgfVxufVxuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBDYXJkIGRlbGV0aW9uIGZyb20gQVBJICYgRE9NXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5jb25zdCBkZWxldGVDYXJkTW9kYWwgPSBuZXcgUG9wdXBXaXRoQ29uZmlybShcIiNkZWxldGUtY2FyZC1tb2RhbFwiLCAoKSA9PiB7fSk7XG5kZWxldGVDYXJkTW9kYWwuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcblxuZnVuY3Rpb24gaGFuZGxlVHJhc2hDbGljayhjYXJkKSB7XG4gIGRlbGV0ZUNhcmRNb2RhbC5vcGVuKCk7XG4gIGRlbGV0ZUNhcmRNb2RhbC5zZXRTdWJtaXRIYW5kbGVyKCgpID0+IHtcbiAgICBhcGlcbiAgICAgIC5kZWxldGVDYXJkKGNhcmQuX2lkKVxuICAgICAgLnRoZW4oKCkgPT4ge1xuICAgICAgICBjYXJkLl9lbGVtZW50LnJlbW92ZSgpO1xuICAgICAgICBjYXJkLl9lbGVtZW50ID0gbnVsbDtcbiAgICAgICAgZGVsZXRlQ2FyZE1vZGFsLmNsb3NlKCk7XG4gICAgICB9KVxuICAgICAgLmNhdGNoKChlcnJvcikgPT4gY29uc29sZS5lcnJvcihcIkZhaWxlZCB0byBkZWxldGUgY2FyZDpcIiwgZXJyb3IpKTtcbiAgfSk7XG59XG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIFZhbGlkYXRpb25cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbmNvbnN0IGZvcm1WYWxpZGF0b3JzID0ge307XG5cbmNvbnN0IGVuYWJsZVZhbGlkYXRpb24gPSAodmFsaWRhdGlvblNldHRpbmdzKSA9PiB7XG4gIGNvbnN0IGZvcm1MaXN0ID0gQXJyYXkuZnJvbShcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKHZhbGlkYXRpb25TZXR0aW5ncy5mb3JtU2VsZWN0b3IpXG4gICk7XG4gIGZvcm1MaXN0LmZvckVhY2goKGZvcm1FbGVtZW50KSA9PiB7XG4gICAgY29uc3QgdmFsaWRhdG9yID0gbmV3IEZvcm1WYWxpZGF0b3IodmFsaWRhdGlvblNldHRpbmdzLCBmb3JtRWxlbWVudCk7XG4gICAgY29uc3QgZm9ybU5hbWUgPSBmb3JtRWxlbWVudC5nZXRBdHRyaWJ1dGUoXCJuYW1lXCIpO1xuICAgIGZvcm1WYWxpZGF0b3JzW2Zvcm1OYW1lXSA9IHZhbGlkYXRvcjtcbiAgICB2YWxpZGF0b3IuZW5hYmxlVmFsaWRhdGlvbigpO1xuICB9KTtcbn07XG5lbmFibGVWYWxpZGF0aW9uKHZhbGlkYXRpb25TZXR0aW5ncyk7XG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIEV2ZW50IExpc3RlbmVyc1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxucHJvZmlsZUVkaXRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgY29uc3QgeyBuYW1lLCBhYm91dCB9ID0gdXNlckluZm8uZ2V0VXNlckluZm8oKTtcbiAgcHJvZmlsZU5hbWVJbnB1dC52YWx1ZSA9IG5hbWU7XG4gIHByb2ZpbGVBYm91dElucHV0LnZhbHVlID0gYWJvdXQ7XG4gIGZvcm1WYWxpZGF0b3JzW1wicHJvZmlsZS1mb3JtXCJdLnJlc2V0VmFsaWRhdGlvbigpO1xuICBwcm9maWxlRWRpdFBvcHVwLm9wZW4oKTtcbn0pO1xuXG5hdmF0YXJFZGl0QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gIGNvbnN0IHsgYXZhdGFyIH0gPSB1c2VyQXZhdGFyLmdldFVzZXJBdmF0YXIoKTtcbiAgYXZhdGFyVVJMSW5wdXQudmFsdWUgPSBhdmF0YXI7XG4gIGZvcm1WYWxpZGF0b3JzW1wiYXZhdGFyLWZvcm1cIl0ucmVzZXRWYWxpZGF0aW9uKCk7XG4gIGF2YXRhckVkaXRQb3B1cC5vcGVuKCk7XG59KTtcblxuY2FyZEFkZEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICBhZGRDYXJkUG9wdXAub3Blbih0cnVlKTtcbn0pO1xuIiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL1BvcHVwLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aEltYWdlIGV4dGVuZHMgUG9wdXAge1xuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yKSB7XG4gICAgc3VwZXIocG9wdXBTZWxlY3Rvcik7XG4gICAgdGhpcy5fcG9wdXBJbWFnZSA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2ltYWdlXCIpO1xuICAgIHRoaXMuX3BvcHVwSW1hZ2VUaXRsZSA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2ltYWdlLXRpdGxlXCIpO1xuICB9XG5cbiAgb3Blbih7IG5hbWUsIGxpbmsgfSkge1xuICAgIHRoaXMuX3BvcHVwSW1hZ2Uuc3JjID0gbGluaztcbiAgICB0aGlzLl9wb3B1cEltYWdlLmFsdCA9IG5hbWU7XG4gICAgdGhpcy5fcG9wdXBJbWFnZVRpdGxlLnRleHRDb250ZW50ID0gbmFtZTtcbiAgICBzdXBlci5vcGVuKCk7XG4gIH1cbn1cbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIEFwaSB7XG4gIGNvbnN0cnVjdG9yKHsgYmFzZVVybCwgYXV0aFRva2VuIH0pIHtcbiAgICB0aGlzLl9iYXNlVXJsID0gYmFzZVVybDtcbiAgICB0aGlzLl9hdXRoVG9rZW4gPSBhdXRoVG9rZW47XG4gIH1cblxuICBnZXRDYXJkTGlzdCgpIHtcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vY2FyZHNgLCB7XG4gICAgICBoZWFkZXJzOiB7XG4gICAgICAgIGF1dGhvcml6YXRpb246IHRoaXMuX2F1dGhUb2tlbixcbiAgICAgIH0sXG4gICAgfSlcbiAgICAgIC50aGVuKChyZXMpID0+XG4gICAgICAgIHJlcy5vayA/IHJlcy5qc29uKCkgOiBQcm9taXNlLnJlamVjdChgRXJyb3I6ICR7cmVzLnN0YXR1c31gKVxuICAgICAgKVxuICAgICAgLmNhdGNoKChlcnIpID0+IHtcbiAgICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgIH0pO1xuICB9XG5cbiAgYWRkQ2FyZCh7IG5hbWUsIGxpbmsgfSkge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkc2AsIHtcbiAgICAgIG1ldGhvZDogXCJQT1NUXCIsXG4gICAgICBoZWFkZXJzOiB7XG4gICAgICAgIGF1dGhvcml6YXRpb246IHRoaXMuX2F1dGhUb2tlbixcbiAgICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXG4gICAgICB9LFxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICBuYW1lLFxuICAgICAgICBsaW5rLFxuICAgICAgfSksXG4gICAgfSkudGhlbigocmVzKSA9PiB7XG4gICAgICBpZiAoIXJlcy5vaykge1xuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoYEVycm9yOiAke3Jlcy5zdGF0dXN9YCk7XG4gICAgICB9XG4gICAgICByZXR1cm4gcmVzLmpzb24oKTtcbiAgICB9KTtcbiAgfVxuXG4gIGRlbGV0ZUNhcmQoY2FyZElkKSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzLyR7Y2FyZElkfWAsIHtcbiAgICAgIG1ldGhvZDogXCJERUxFVEVcIixcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgYXV0aG9yaXphdGlvbjogdGhpcy5fYXV0aFRva2VuLFxuICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgICAgIH0sXG4gICAgfSkudGhlbigocmVzKSA9PiB7XG4gICAgICBpZiAoIXJlcy5vaykge1xuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoYEVycm9yOiAke3Jlcy5zdGF0dXN9YCk7XG4gICAgICB9XG4gICAgICByZXR1cm4gcmVzLmpzb24oKTtcbiAgICB9KTtcbiAgfVxuXG4gIGdldFByb2ZpbGVEYXRhKCkge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS91c2Vycy9tZWAsIHtcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgYXV0aG9yaXphdGlvbjogdGhpcy5fYXV0aFRva2VuLFxuICAgICAgfSxcbiAgICB9KVxuICAgICAgLnRoZW4oKHJlcykgPT5cbiAgICAgICAgcmVzLm9rID8gcmVzLmpzb24oKSA6IFByb21pc2UucmVqZWN0KGBFcnJvcjogJHtyZXMuc3RhdHVzfWApXG4gICAgICApXG4gICAgICAuY2F0Y2goKGVycikgPT4ge1xuICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAgfSk7XG4gIH1cblxuICBlZGl0UHJvZmlsZURhdGEoeyBuYW1lLCBhYm91dCB9KSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L3VzZXJzL21lYCwge1xuICAgICAgbWV0aG9kOiBcIlBBVENIXCIsXG4gICAgICBoZWFkZXJzOiB7XG4gICAgICAgIGF1dGhvcml6YXRpb246IHRoaXMuX2F1dGhUb2tlbixcbiAgICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXG4gICAgICB9LFxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICBuYW1lLFxuICAgICAgICBhYm91dCxcbiAgICAgIH0pLFxuICAgIH0pLnRoZW4oKHJlcykgPT4ge1xuICAgICAgaWYgKCFyZXMub2spIHtcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGBFcnJvcjogJHtyZXMuc3RhdHVzfWApO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHJlcy5qc29uKCk7XG4gICAgfSk7XG4gIH1cblxuICBnZXRVc2VyQXZhdGFyKCkge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS91c2Vycy9tZWAsIHtcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgYXV0aG9yaXphdGlvbjogdGhpcy5fYXV0aFRva2VuLFxuICAgICAgfSxcbiAgICB9KVxuICAgICAgLnRoZW4oKHJlcykgPT5cbiAgICAgICAgcmVzLm9rID8gcmVzLmpzb24oKSA6IFByb21pc2UucmVqZWN0KGBFcnJvcjogJHtyZXMuc3RhdHVzfWApXG4gICAgICApXG4gICAgICAuY2F0Y2goKGVycikgPT4ge1xuICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAgfSk7XG4gIH1cblxuICBlZGl0VXNlckF2YXRhcih7IGF2YXRhciB9KSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L3VzZXJzL21lL2F2YXRhcmAsIHtcbiAgICAgIG1ldGhvZDogXCJQQVRDSFwiLFxuICAgICAgaGVhZGVyczoge1xuICAgICAgICBhdXRob3JpemF0aW9uOiB0aGlzLl9hdXRoVG9rZW4sXG4gICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgICAgfSxcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgYXZhdGFyLFxuICAgICAgfSksXG4gICAgfSkudGhlbigocmVzKSA9PiB7XG4gICAgICBpZiAoIXJlcy5vaykge1xuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoYEVycm9yOiAke3Jlcy5zdGF0dXN9YCk7XG4gICAgICB9XG4gICAgICByZXR1cm4gcmVzLmpzb24oKTtcbiAgICB9KTtcbiAgfVxuXG4gIGxpa2VDYXJkKGNhcmRJZCkge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkcy8ke2NhcmRJZH0vbGlrZXNgLCB7XG4gICAgICBtZXRob2Q6IFwiUFVUXCIsXG4gICAgICBoZWFkZXJzOiB7XG4gICAgICAgIGF1dGhvcml6YXRpb246IHRoaXMuX2F1dGhUb2tlbixcbiAgICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXG4gICAgICB9LFxuICAgIH0pLnRoZW4oKHJlcykgPT4ge1xuICAgICAgaWYgKCFyZXMub2spIHtcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGBFcnJvcjogJHtyZXMuc3RhdHVzfWApO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHJlcy5qc29uKCk7XG4gICAgfSk7XG4gIH1cblxuICB1bmxpa2VDYXJkKGNhcmRJZCkge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkcy8ke2NhcmRJZH0vbGlrZXNgLCB7XG4gICAgICBtZXRob2Q6IFwiREVMRVRFXCIsXG4gICAgICBoZWFkZXJzOiB7XG4gICAgICAgIGF1dGhvcml6YXRpb246IHRoaXMuX2F1dGhUb2tlbixcbiAgICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXG4gICAgICB9LFxuICAgIH0pLnRoZW4oKHJlcykgPT4ge1xuICAgICAgaWYgKCFyZXMub2spIHtcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGBFcnJvcjogJHtyZXMuc3RhdHVzfWApO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHJlcy5qc29uKCk7XG4gICAgfSk7XG4gIH1cbn1cbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFVzZXJJbmZvIHtcbiAgY29uc3RydWN0b3IoeyBuYW1lU2VsZWN0b3IsIGFib3V0U2VsZWN0b3IgfSkge1xuICAgIHRoaXMuX3Byb2ZpbGVOYW1lID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihuYW1lU2VsZWN0b3IpO1xuICAgIHRoaXMuX3Byb2ZpbGVBYm91dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYWJvdXRTZWxlY3Rvcik7XG4gIH1cblxuICBnZXRVc2VySW5mbygpIHtcbiAgICByZXR1cm4ge1xuICAgICAgbmFtZTogdGhpcy5fcHJvZmlsZU5hbWUudGV4dENvbnRlbnQsXG4gICAgICBhYm91dDogdGhpcy5fcHJvZmlsZUFib3V0LnRleHRDb250ZW50LFxuICAgIH07XG4gIH1cblxuICBzZXRVc2VySW5mbyh7IG5hbWUsIGFib3V0IH0pIHtcbiAgICB0aGlzLl9wcm9maWxlTmFtZS50ZXh0Q29udGVudCA9IG5hbWU7XG4gICAgdGhpcy5fcHJvZmlsZUFib3V0LnRleHRDb250ZW50ID0gYWJvdXQ7XG4gIH1cbn1cbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFVzZXJBdmF0YXIge1xuICBjb25zdHJ1Y3Rvcih7IGF2YXRhclNlbGVjdG9yIH0pIHtcbiAgICB0aGlzLl9wcm9maWxlQXZhdGFyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihhdmF0YXJTZWxlY3Rvcik7XG4gIH1cblxuICBnZXRVc2VyQXZhdGFyKCkge1xuICAgIHJldHVybiB7IGF2YXRhcjogdGhpcy5fcHJvZmlsZUF2YXRhci5zcmMgfTtcbiAgfVxuXG4gIHNldFVzZXJBdmF0YXIoeyBhdmF0YXIgfSkge1xuICAgIHRoaXMuX3Byb2ZpbGVBdmF0YXIuc3JjID0gYXZhdGFyO1xuICB9XG59XG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBTZWN0aW9uIHtcbiAgY29uc3RydWN0b3IoeyBpdGVtcyA9IFtdLCByZW5kZXJlciB9LCBjb250YWluZXJTZWxlY3Rvcikge1xuICAgIHRoaXMuX2l0ZW1zID0gaXRlbXM7XG4gICAgdGhpcy5fcmVuZGVyZXIgPSByZW5kZXJlcjtcbiAgICB0aGlzLl9jb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGNvbnRhaW5lclNlbGVjdG9yKTtcbiAgfVxuXG4gIHJlbmRlckl0ZW1zKGl0ZW1zKSB7XG4gICAgaXRlbXMuZm9yRWFjaCgoaXRlbSkgPT4gdGhpcy5fcmVuZGVyZXIoaXRlbSkpO1xuICB9XG5cbiAgYXBwZW5kSXRlbShlbGVtZW50KSB7XG4gICAgdGhpcy5fY29udGFpbmVyLmFwcGVuZChlbGVtZW50KTtcbiAgfVxuXG4gIHByZXBlbmRJdGVtKGVsZW1lbnQpIHtcbiAgICB0aGlzLl9jb250YWluZXIucHJlcGVuZChlbGVtZW50KTtcbiAgfVxufVxuIiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL1BvcHVwLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aENvbmZpcm0gZXh0ZW5kcyBQb3B1cCB7XG4gIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IsIGhhbmRsZUZvcm1TdWJtaXQpIHtcbiAgICBzdXBlcihwb3B1cFNlbGVjdG9yKTtcbiAgICB0aGlzLl9mb3JtID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fZm9ybVwiKTtcbiAgICB0aGlzLl9oYW5kbGVGb3JtU3VibWl0ID0gaGFuZGxlRm9ybVN1Ym1pdDtcbiAgfVxuXG4gIHNldFN1Ym1pdEhhbmRsZXIoaGFuZGxlcikge1xuICAgIHRoaXMuX2hhbmRsZUZvcm1TdWJtaXQgPSBoYW5kbGVyO1xuICB9XG5cbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgc3VwZXIuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbiAgICB0aGlzLl9mb3JtLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKGV2ZW50KSA9PiB7XG4gICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgdGhpcy5faGFuZGxlRm9ybVN1Ym1pdCgpO1xuICAgIH0pO1xuICB9XG59XG4iLCIvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBWYWxpZGF0aW9uXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5leHBvcnQgY29uc3QgdmFsaWRhdGlvblNldHRpbmdzID0ge1xuICBmb3JtU2VsZWN0b3I6IFwiLmZvcm0tc2VsZWN0b3JcIixcbiAgaW5wdXRTZWxlY3RvcjogXCIubW9kYWxfX2lucHV0XCIsXG4gIHN1Ym1pdEJ1dHRvbjogXCIubW9kYWxfX2J1dHRvblwiLFxuICBpbmFjdGl2ZUJ1dHRvbkNsYXNzOiBcIm1vZGFsX19idXR0b25fZGlzYWJsZWRcIixcbiAgaW5wdXRFcnJvckNsYXNzOiBcIm1vZGFsX19pbnB1dF90eXBlX2Vycm9yXCIsXG4gIGVycm9yQ2xhc3M6IFwibW9kYWxfX2Vycm9yX3Zpc2libGVcIixcbn07XG4iXSwibmFtZXMiOlsiQ2FyZCIsImNvbnN0cnVjdG9yIiwiX3JlZiIsImNhcmRUZW1wbGF0ZSIsImhhbmRsZUltYWdlQ2xpY2siLCJoYW5kbGVUcmFzaENsaWNrIiwidXBkYXRlTGlrZSIsIm5hbWUiLCJsaW5rIiwiX2lkIiwiaXNMaWtlZCIsInRoaXMiLCJfbmFtZSIsIl9saW5rIiwiX2NhcmRUZW1wbGF0ZSIsIl9oYW5kbGVJbWFnZUNsaWNrIiwiX2hhbmRsZVRyYXNoQ2xpY2siLCJfdXBkYXRlTGlrZSIsIl9lbGVtZW50IiwiX2dldFRlbXBsYXRlIiwiX2xpa2VCdXR0b24iLCJxdWVyeVNlbGVjdG9yIiwiX2RlbGV0ZUJ1dHRvbiIsIl9jYXJkSW1hZ2UiLCJfY2FyZFRpdGxlIiwiX2RlbGV0ZUNhcmRNb2RhbCIsImRvY3VtZW50IiwiX3NldEV2ZW50TGlzdGVuZXJzIiwiY29udGVudCIsImNsb25lTm9kZSIsImFkZEV2ZW50TGlzdGVuZXIiLCJfaGFuZGxlQ2FyZExpa2UiLCJjbGFzc0xpc3QiLCJ0b2dnbGUiLCJhZGQiLCJfaGFuZGxlRXNjQ2xvc2UiLCJ0b2dnbGVJc0xpa2VkIiwiZ2V0VmlldyIsInRleHRDb250ZW50Iiwic3JjIiwiYWx0IiwiRm9ybVZhbGlkYXRvciIsInNldHRpbmdzIiwiZm9ybUVsZW1lbnQiLCJfc2V0dGluZ3MiLCJfZm9ybUVsZW1lbnQiLCJfaW5wdXRMaXN0IiwiQXJyYXkiLCJmcm9tIiwicXVlcnlTZWxlY3RvckFsbCIsImlucHV0U2VsZWN0b3IiLCJfYnV0dG9uRWxlbWVudCIsInN1Ym1pdEJ1dHRvbiIsIl9zaG93SW5wdXRFcnJvciIsImlucHV0RWxlbWVudCIsImVycm9yTWVzc2FnZSIsImVycm9yRWxlbWVudCIsImlkIiwiaW5wdXRFcnJvckNsYXNzIiwiZXJyb3JDbGFzcyIsIl9oaWRlSW5wdXRFcnJvciIsInJlbW92ZSIsIl9jaGVja0lucHV0VmFsaWRpdHkiLCJ2YWxpZGl0eSIsInZhbGlkIiwidmFsaWRhdGlvbk1lc3NhZ2UiLCJ0b2dnbGVCdXR0b25TdGF0ZSIsIl9oYXNJbnZhbGlkSW5wdXQiLCJpbmFjdGl2ZUJ1dHRvbkNsYXNzIiwiZGlzYWJsZWQiLCJzb21lIiwiZm9yRWFjaCIsImVuYWJsZVZhbGlkYXRpb24iLCJldnQiLCJwcmV2ZW50RGVmYXVsdCIsInJlc2V0VmFsaWRhdGlvbiIsIlBvcHVwIiwicG9wdXBTZWxlY3RvciIsIl9wb3B1cCIsImJpbmQiLCJvcGVuIiwiZXZlbnQiLCJrZXkiLCJjbG9zZSIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJ0b2dnbGVVcGxvYWRJbmRpY2F0b3IiLCJpc1VwbG9hZGluZyIsIl9zdWJtaXRCdXR0b24iLCJzZXRFdmVudExpc3RlbmVycyIsInRhcmdldCIsImNvbnRhaW5zIiwiUG9wdXBXaXRoRm9ybSIsImhhbmRsZUZvcm1TdWJtaXQiLCJzdXBlciIsIl9oYW5kbGVGb3JtU3VibWl0IiwiX2Zvcm0iLCJfZ2V0SW5wdXRWYWx1ZXMiLCJfZm9ybVZhbHVlcyIsImlucHV0IiwidmFsdWUiLCJfc2V0SW5wdXRWYWx1ZXMiLCJkYXRhIiwiZ2V0Rm9ybSIsInJlc2V0IiwicHJvZmlsZUVkaXRCdXR0b24iLCJwcm9maWxlTmFtZUlucHV0IiwiYXZhdGFyVVJMSW5wdXQiLCJwcm9maWxlQWJvdXRJbnB1dCIsImF2YXRhckVkaXRCdXR0b24iLCJjYXJkQWRkQnV0dG9uIiwiaW1hZ2VQb3B1cCIsIl9wb3B1cEltYWdlIiwiX3BvcHVwSW1hZ2VUaXRsZSIsImFwaSIsImJhc2VVcmwiLCJhdXRoVG9rZW4iLCJfYmFzZVVybCIsIl9hdXRoVG9rZW4iLCJnZXRDYXJkTGlzdCIsImZldGNoIiwiaGVhZGVycyIsImF1dGhvcml6YXRpb24iLCJ0aGVuIiwicmVzIiwib2siLCJqc29uIiwiUHJvbWlzZSIsInJlamVjdCIsInN0YXR1cyIsImNhdGNoIiwiZXJyIiwiY29uc29sZSIsImxvZyIsImFkZENhcmQiLCJfcmVmMiIsIm1ldGhvZCIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwiZGVsZXRlQ2FyZCIsImNhcmRJZCIsImdldFByb2ZpbGVEYXRhIiwiZWRpdFByb2ZpbGVEYXRhIiwiX3JlZjMiLCJhYm91dCIsImdldFVzZXJBdmF0YXIiLCJlZGl0VXNlckF2YXRhciIsIl9yZWY0IiwiYXZhdGFyIiwibGlrZUNhcmQiLCJ1bmxpa2VDYXJkIiwidXNlckluZm8iLCJuYW1lU2VsZWN0b3IiLCJhYm91dFNlbGVjdG9yIiwiX3Byb2ZpbGVOYW1lIiwiX3Byb2ZpbGVBYm91dCIsImdldFVzZXJJbmZvIiwic2V0VXNlckluZm8iLCJlcnJvciIsInByb2ZpbGVFZGl0UG9wdXAiLCJmb3JtRGF0YSIsImZpbmFsbHkiLCJ1c2VyQXZhdGFyIiwiYXZhdGFyU2VsZWN0b3IiLCJfcHJvZmlsZUF2YXRhciIsInNldFVzZXJBdmF0YXIiLCJhdmF0YXJFZGl0UG9wdXAiLCJhdmF0YXJVUkwiLCJjYXJkU2VjdGlvbiIsImNvbnRhaW5lclNlbGVjdG9yIiwiaXRlbXMiLCJyZW5kZXJlciIsIl9pdGVtcyIsIl9yZW5kZXJlciIsIl9jb250YWluZXIiLCJyZW5kZXJJdGVtcyIsIml0ZW0iLCJhcHBlbmRJdGVtIiwiZWxlbWVudCIsImFwcGVuZCIsInByZXBlbmRJdGVtIiwicHJlcGVuZCIsImNhcmREYXRhIiwiY2FyZCIsImNhcmRMaXN0IiwiYWRkQ2FyZFBvcHVwIiwiYXBpQ2FyZERhdGEiLCJkZWxldGVDYXJkTW9kYWwiLCJzZXRTdWJtaXRIYW5kbGVyIiwiaGFuZGxlciIsImZvcm1WYWxpZGF0b3JzIiwidmFsaWRhdGlvblNldHRpbmdzIiwiZm9ybVNlbGVjdG9yIiwidmFsaWRhdG9yIiwiZm9ybU5hbWUiLCJnZXRBdHRyaWJ1dGUiXSwic291cmNlUm9vdCI6IiJ9